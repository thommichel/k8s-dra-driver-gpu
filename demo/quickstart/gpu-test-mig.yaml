# 6 pods:
#   1 pod with 2 containers sharing mig with mps
#   1 pod with 2 containers sharing mig with time slicing
#   2 pods with 1 container sharing mig with mps
#   2 pods with 1 container sharing mig with time slicing

# NOTE: This demo requires 1 GPU with MIG enabled

---
apiVersion: v1
kind: Namespace
metadata:
  name: gpu-test-mig

---
apiVersion: resource.k8s.io/v1alpha3
kind: ResourceClaim
metadata:
  namespace: gpu-test-mig
  name: mig-devices
spec:
  devices:
    requests:
      - name: mig-1g-0
        deviceClassName: mig.nvidia.com
        selectors:
          - cel:
              expression: |
                device.attributes['gpu.nvidia.com'].productName.lowerAscii().matches('^.*a100.*$')
                && device.attributes['gpu.nvidia.com'].profile == '1g.10gb'
      - name: mig-1g-1
        deviceClassName: mig.nvidia.com
        selectors:
          - cel:
              expression: |
                device.attributes['gpu.nvidia.com'].productName.lowerAscii().matches('^.*a100.*$')
                && device.attributes['gpu.nvidia.com'].profile == '1g.10gb'
      - name: mig-2g
        deviceClassName: mig.nvidia.com
        selectors:
          - cel:
              expression: |
                device.attributes['gpu.nvidia.com'].productName.lowerAscii().matches('^.*a100.*$')
                && device.attributes['gpu.nvidia.com'].profile == '2g.20gb'
      - name: mig-3g
        deviceClassName: mig.nvidia.com
        selectors:
          - cel:
              expression: |
                device.attributes['gpu.nvidia.com'].productName.lowerAscii().matches('^.*a100.*$')
                && device.attributes['gpu.nvidia.com'].profile == '3g.40gb'
    config:
    - requests: ["mig-1g-0"]
      opaque:
        driver: gpu.nvidia.com
        parameters:
          apiVersion: gpu.nvidia.com/v1alpha1
          kind: MigDeviceConfig
          sharing:
            strategy: MPS
            mpsConfig:
              defaultActiveThreadPercentage: 100
              defaultPinnedDeviceMemoryLimit: 40Gi
    - requests: ["mig-1g-1"]
      opaque:
        driver: gpu.nvidia.com
        parameters:
          apiVersion: gpu.nvidia.com/v1alpha1
          kind: MigDeviceConfig
          sharing:
            strategy: TimeSlicing
    - requests: ["mig-2g"]
      opaque:
        driver: gpu.nvidia.com
        parameters:
          apiVersion: gpu.nvidia.com/v1alpha1
          kind: MigDeviceConfig
          sharing:
            strategy: TimeSlicing
    - requests: ["mig-3g"]
      opaque:
        driver: gpu.nvidia.com
        parameters:
          apiVersion: gpu.nvidia.com/v1alpha1
          kind: MigDeviceConfig
          sharing:
            strategy: MPS
            mpsConfig:
              defaultActiveThreadPercentage: 25
              defaultPinnedDeviceMemoryLimit: 20Gi

---
apiVersion: v1
kind: Pod
metadata:
  namespace: gpu-test-mig
  name: pod0
spec:
  resourceClaims:
    - name: mig-devices
      resourceClaimName: mig-devices
  containers:
    - name: crt0
      image: nvcr.io/nvidia/k8s/cuda-sample:nbody-cuda11.6.0-ubuntu18.04
      command: ["bash", "-c"]
      args: ["trap 'exit 0' TERM; /tmp/sample --benchmark --numbodies=4226000 & wait"]
      env:
      - name: NVIDIA_VISIBLE_DEVICES
        value: void
      resources:
        claims:
          - name: mig-devices
            request: mig-1g-0
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
    - name: ctr1
      image: nvcr.io/nvidia/k8s/cuda-sample:nbody-cuda11.6.0-ubuntu18.04
      command: ["bash", "-c"]
      args: ["trap 'exit 0' TERM; /tmp/sample --benchmark --numbodies=4226000 & wait"]
      env:
      - name: NVIDIA_VISIBLE_DEVICES
        value: void
      resources:
        claims:
          - name: mig-devices
            request: mig-1g-0
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
tolerations:
  - key: "nvidia.com/gpu"
    operator: "Exists"
    effect: "NoSchedule"

---
apiVersion: v1
kind: Pod
metadata:
  namespace: gpu-test-mig
  name: pod1
spec:
  resourceClaims:
    - name: mig-devices
      resourceClaimName: mig-devices
  containers:
    - name: crt0
      image: nvcr.io/nvidia/k8s/cuda-sample:nbody-cuda11.6.0-ubuntu18.04
      command: ["bash", "-c"]
      args: ["trap 'exit 0' TERM; /tmp/sample --benchmark --numbodies=4226000 & wait"]
      env:
      - name: NVIDIA_VISIBLE_DEVICES
        value: void
      resources:
        claims:
          - name: mig-devices
            request: mig-1g-1
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
    - name: ctr1
      image: nvcr.io/nvidia/k8s/cuda-sample:nbody-cuda11.6.0-ubuntu18.04
      command: ["bash", "-c"]
      args: ["trap 'exit 0' TERM; /tmp/sample --benchmark --numbodies=4226000 & wait"]
      env:
      - name: NVIDIA_VISIBLE_DEVICES
        value: void
      resources:
        claims:
          - name: mig-devices
            request: mig-1g-1
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
tolerations:
  - key: "nvidia.com/gpu"
    operator: "Exists"
    effect: "NoSchedule"

---
apiVersion: v1
kind: Pod
metadata:
  namespace: gpu-test-mig
  name: pod2
spec:
  resourceClaims:
    - name: mig-devices
      resourceClaimName: mig-devices
  containers:
    - name: crt0
      image: nvcr.io/nvidia/k8s/cuda-sample:nbody-cuda11.6.0-ubuntu18.04
      command: ["bash", "-c"]
      args: ["trap 'exit 0' TERM; /tmp/sample --benchmark --numbodies=4226000 & wait"]
      env:
      - name: NVIDIA_VISIBLE_DEVICES
        value: void
      resources:
        claims:
          - name: mig-devices
            request: mig-2g
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
tolerations:
  - key: "nvidia.com/gpu"
    operator: "Exists"
    effect: "NoSchedule"

---
apiVersion: v1
kind: Pod
metadata:
  namespace: gpu-test-mig
  name: pod3
spec:
  resourceClaims:
    - name: mig-devices
      resourceClaimName: mig-devices
  containers:
    - name: crt0
      image: nvcr.io/nvidia/k8s/cuda-sample:nbody-cuda11.6.0-ubuntu18.04
      command: ["bash", "-c"]
      args: ["trap 'exit 0' TERM; /tmp/sample --benchmark --numbodies=4226000 & wait"]
      env:
      - name: NVIDIA_VISIBLE_DEVICES
        value: void
      resources:
        claims:
          - name: mig-devices
            request: mig-2g
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
tolerations:
  - key: "nvidia.com/gpu"
    operator: "Exists"
    effect: "NoSchedule"

---
apiVersion: v1
kind: Pod
metadata:
  namespace: gpu-test-mig
  name: pod4
spec:
  resourceClaims:
    - name: mig-devices
      resourceClaimName: mig-devices
  containers:
    - name: crt0
      image: nvcr.io/nvidia/k8s/cuda-sample:nbody-cuda11.6.0-ubuntu18.04
      command: ["bash", "-c"]
      args: ["trap 'exit 0' TERM; /tmp/sample --benchmark --numbodies=4226000 & wait"]
      env:
      - name: NVIDIA_VISIBLE_DEVICES
        value: void
      resources:
        claims:
          - name: mig-devices
            request: mig-3g
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
tolerations:
  - key: "nvidia.com/gpu"
    operator: "Exists"
    effect: "NoSchedule"

---
apiVersion: v1
kind: Pod
metadata:
  namespace: gpu-test-mig
  name: pod5
spec:
  resourceClaims:
    - name: mig-devices
      resourceClaimName: mig-devices
  containers:
    - name: crt0
      image: nvcr.io/nvidia/k8s/cuda-sample:nbody-cuda11.6.0-ubuntu18.04
      command: ["bash", "-c"]
      args: ["trap 'exit 0' TERM; /tmp/sample --benchmark --numbodies=4226000 & wait"]
      env:
      - name: NVIDIA_VISIBLE_DEVICES
        value: void
      resources:
        claims:
          - name: mig-devices
            request: mig-3g
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
tolerations:
  - key: "nvidia.com/gpu"
    operator: "Exists"
    effect: "NoSchedule"
