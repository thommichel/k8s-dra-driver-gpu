# One pod, 4 containers
# Each asking for a different MIG device on a shared mig-enabled GPU
# Run as deployment with 4 replicas

# NOTE: This demo requires 4 separate GPUs (1 distinct GPU for each replica) each with MIG enabled

---
apiVersion: v1
kind: Namespace
metadata:
  name: gpu-test4

---
apiVersion: resource.k8s.io/v1alpha3
kind: ResourceClaimTemplate
metadata:
  namespace: gpu-test4
  name: mig-devices
spec:
  spec:
    devices:
      requests:
      - name: mig-1g-5gb-0
        deviceClassName: mig.nvidia.com
        selectors:
        - cel:
            expression: "device.attributes['gpu.nvidia.com'].profile == '1g.10gb'"
      - name: mig-1g-5gb-1
        deviceClassName: mig.nvidia.com
        selectors:
        - cel:
            expression: "device.attributes['gpu.nvidia.com'].profile == '1g.10gb'"
      - name: mig-2g-10gb
        deviceClassName: mig.nvidia.com
        selectors:
        - cel:
            expression: "device.attributes['gpu.nvidia.com'].profile == '2g.20gb'"
      - name: mig-3g-20gb
        deviceClassName: mig.nvidia.com
        selectors:
        - cel:
            expression: "device.attributes['gpu.nvidia.com'].profile == '3g.40gb'"

      constraints:
      - requests: []
        matchAttribute: "gpu.nvidia.com/parentUUID"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: gpu-test4
  name: pod
  labels:
    app: gpu-test4-pod
spec:
  replicas: 4
  selector:
    matchLabels:
      app: pod
  template:
    metadata:
      labels:
        app: pod
    spec:
      resourceClaims:
      - name: mig-devices
        resourceClaimTemplateName: mig-devices
      containers:
      - name: ctr0
        image: nvcr.io/nvidia/k8s/cuda-sample:nbody-cuda11.6.0-ubuntu18.04
        command: ["bash", "-c"]
        args: ["trap 'exit 0' TERM; /tmp/sample --benchmark --numbodies=4226048 & wait"]
        resources:
          claims:
          - name: mig-devices
            request: mig-1g-5gb-0
        env:
        - name: NVIDIA_VISIBLE_DEVICES
          value: void
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
      - name: ctr1
        image: nvcr.io/nvidia/k8s/cuda-sample:nbody-cuda11.6.0-ubuntu18.04
        command: ["bash", "-c"]
        args: ["trap 'exit 0' TERM; /tmp/sample --benchmark --numbodies=4226048 & wait"]
        resources:
          claims:
          - name: mig-devices
            request: mig-1g-5gb-1
        env:
        - name: NVIDIA_VISIBLE_DEVICES
          value: void
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
      - name: ctr2
        image: nvcr.io/nvidia/k8s/cuda-sample:nbody-cuda11.6.0-ubuntu18.04
        command: ["bash", "-c"]
        args: ["trap 'exit 0' TERM; /tmp/sample --benchmark --numbodies=4226048 & wait"]
        resources:
          claims:
          - name: mig-devices
            request: mig-2g-10gb
        env:
        - name: NVIDIA_VISIBLE_DEVICES
          value: void
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
      - name: ctr3
        image: nvcr.io/nvidia/k8s/cuda-sample:nbody-cuda11.6.0-ubuntu18.04
        command: ["bash", "-c"]
        args: ["trap 'exit 0' TERM; /tmp/sample --benchmark --numbodies=4226048 & wait"]
        resources:
          claims:
          - name: mig-devices
            request: mig-3g-20gb
        env:
        - name: NVIDIA_VISIBLE_DEVICES
          value: void
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
      tolerations:
      - key: "nvidia.com/gpu"
        operator: "Exists"
        effect: "NoSchedule"
